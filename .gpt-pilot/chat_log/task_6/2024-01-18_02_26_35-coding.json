{
  "endpoint": "OPENAI",
  "model": "gpt-4-1106-preview",
  "functions": [
    {
      "name": "get_fully_coded_file",
      "description": "Gets the fully coded file.",
      "parameters": {
        "type": "object",
        "properties": {
          "file_content": {
            "type": "string",
            "description": "Fully coded file. This contains only the lines of code and no other text."
          }
        },
        "required": [
          "file_content"
        ]
      }
    }
  ],
  "response": {
    "file_content": "require('dotenv').config();\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst bodyParser = require('body-parser');\nconst authRoutes = require('./routes/authRoutes');\nconst metaApiRoutes = require('./routes/metaApiRoutes');\nconst grafRoutes = require('./routes/grafRoutes');\nconst app = express();\nconst port = process.env.PORT || 3000;\n\nmongoose.connect('mongodb://localhost/ai_and_ml_');\n\napp.use(bodyParser.json());\napp.use('/api/auth', authRoutes);\napp.use('/api/metaapi', metaApiRoutes);\napp.use('/api/graf', grafRoutes);\n\napp.get('/ping', (req, res) => {\n  res.send('pong');\n});\n\napp.use((err, req, res, next) => {\n  logger.error(err.stack);\n  const status = err.status || 500;\n  res.status(status).json({ message: err.message || \"Internal Server Error\" });\n});\n\nconst winston = require('winston');\nconst logger = winston.createLogger({\n  level: 'error',\n  format: winston.format.json(),\n  transports: [\n    new winston.transports.File({ filename: 'error.log', level: 'error' })\n  ]\n});\n\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n}).on('error', (err) => {\n  console.error(`Error starting server: ${err.message}`);\n});\n"
  }
}