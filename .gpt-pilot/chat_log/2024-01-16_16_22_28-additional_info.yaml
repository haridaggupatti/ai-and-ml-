endpoint: OPENAI
model: gpt-4-1106-preview
messages:
- role: system
  content: You are an experienced project owner (project manager) who manages the entire process of creating software applications
    for clients from the client specifications to the development. You act as if you are talking to the client who wants his
    idea about a software application created by you and your team. You always think step by step and ask detailed questions
    to completely understand what does the client want and then, you give those specifications to the development team who
    creates the code for the app. Any instruction you get that is labeled as **IMPORTANT**, you follow strictly.
- role: user
  content: "I want you to create the App (let's call it \"ai_and_ml_\") that can be described like this:\n```\nIn this project\
    \ mainly I need it in the app the app has work with API are web hook are http with mt4 and mt5 from it has to receive\
    \ the date and it has analyz and it has to think everything according to it has to take are not and then in the market\
    \  it has to  execute the trade perfect and then in  the app it has tell why it has taken the trade and and in that app\
    \ one option has to there if they give the instructions trade like this like martingale or average method are hft methods\
    \ are according to there own costmaigede strategies in normal language once if they write and save it has to work like\
    \ that and in the app it has to maintain the clear Graf how the account is growing according to that it has to  give the\
    \ complete information is that  there startgy will work or not what they have to improve and if they have given the comment\
    \ make your self own  it has to work own it has to work accordingly in the option what they have mentioned and one more\
    \ thing the ai has to improve it self own it has to learn on its own way when\_it\_was\_working\n```"
- role: system
  content: 'I''m going to show you an overview of tasks that you need to do to lead the process of creating this App and for
    each task, I will tell you an example of how would you solve this task for the example app.

    Example app description: `Create a script that finds Youtube channels with the word "test" inside the channel name`.


    Here is an overview of the tasks that you need to do:


    1. Getting additional answers. In this task, you think from a high level perspective and ask if anything is unclear in
    regards to the description that I''ve given to you. You don''t need to ask every single detail to cover all possible edge
    cases but only questions that might be relevant to ask upon first touch with the client. I will answer any questions you
    list here so you have a better understanding of the app that needs to be built. In the example description, you could
    ask the following questions:

    - `do you want to enable user to be able to specify different word to search for in channel name?`

    - `do you want to save the results in a CSV file on the disk?`


    2. Break down user stories. In this task, you will think about the App description and the answers from step #1 and create
    a list of all user stories. A user story is a description of how a user can interact with the App. In the example description,
    user stories could be:

    - `user will run the script from the CLI`

    - `user will get the list of all channels in a CSV file`


    3. Break down user tasks. In this task, you will think about the App description, answers from step #1 and the user stories
    from the step #2 and create a list of user tasks that a user needs to do to interact with the App. In the example description,
    user tasks could be:

    - `user runs the CLI command in which they specify the keyword youtube channel needs to contain and the location where
    the CSV file will be saved to`


    Let''s start with the task #1 Getting additional answers. Think about the description for the App "ai_and_ml_" and ask
    questions that you would like to get cleared before going onto breaking down the user stories.


    **IMPORTANT**

    Do not use, create or suggest any microservices. Create strictly monolithic application even if in some prompts I might
    suggest microservices might be better or more desired solution. Do your best to find a solution to any requirement without
    using microservices.


    **IMPORTANT**

    Here are the instructions for Asking Additional Questions:


    Direct Questions Only: If there are any points that are not clear, you should draft direct questions to clarify them.
    Do not include any preamble, gratitude expressions, or background when posing these questions.


    Concise and Focused: Each question should be concise and focus on one aspect of the project. Do not merge multiple queries
    into a single question, as this can cause confusion.


    No Lead-ins or Conclusions: After receiving an answer to a question, proceed directly to the next question without adding
    any thank yous, recaps, or segues.


    Neutral Tone: Ensure that your questions are neutral and don''t imply any assumptions. The objective is to gather information,
    not to lead the respondent in any particular direction.


    Examples:

    Instead of "Thank you for that information. My next question is: Should A be bigger than B?", simply ask "Should A be
    bigger than B?".

    Instead of "Based on what you said earlier, do we need to prioritize X over Y?", just ask "Do we need to prioritize X
    over Y?".


    Remember: The goal is to extract precise information without adding any unnecessary dialogue. Your questions should be
    straightforward and to the point.


    I want your response to be only one question at a time. I will ask you again when I am ready for next question.


    Ask maximum of 5 questions and after that I want you to respond with "EVERYTHING_CLEAR".


    If everything is clear before asking those 5 questions, you write the response in the following format:

    "EVERYTHING_CLEAR"'
- role: assistant
  content: Which trading instruments should the app support for executing trades on MT4 and MT5 platforms?
- role: user
  content: 'all '
- role: assistant
  content: Should the app implement any specific risk management features, such as stop-loss or take-profit parameters?
- role: user
  content: 'yes we have to devolpe it like it has to take his own disicion we have devolpe ai amd ml '
- role: assistant
  content: What level of customization will be required for users to define their own trading strategies within the app?
- role: user
  content: 'give a opation to make costimaze '
- role: assistant
  content: Will the app require a user authentication system to manage access to personal trading strategies and performance
    data?
- role: user
  content: 'yes '
- role: assistant
  content: How should the app's AI component learn and improve its trading decisions over time? Through historical data analysis,
    real-time market data, user feedback, or a combination of these?
- role: user
  content: 'Historical Data Analysis:


    Importance: Historical data provides a wealth of information about market behavior under different conditions. By analyzing
    past price movements, economic indicators, and other relevant financial data, the AI can identify patterns, trends, and
    correlations that are crucial for making informed trading decisions.

    Methods: Techniques like statistical analysis, machine learning models (e.g., regression, classification, time series
    forecasting), and deep learning (e.g., neural networks) can be employed to understand historical data.

    Challenges: Over-reliance on historical data can lead to issues like overfitting, where the model performs well on past
    data but poorly on new, unseen data. Markets also evolve, and past patterns may not always predict future movements.

    Real-Time Market Data:


    Importance: Financial markets are dynamic and influenced by a myriad of factors, including geopolitical events, economic
    reports, and market sentiment. Real-time data allows the AI to respond promptly to current market conditions.

    Methods: The AI should incorporate algorithms capable of processing and analyzing real-time data streams. This might include
    high-frequency trading algorithms, news sentiment analysis, and anomaly detection.

    Challenges: Real-time data can be noisy and volatile. The AI needs to distinguish between short-term fluctuations and
    significant trends.

    User Feedback:


    Importance: User feedback helps tailor the AI to individual preferences and improve user experience. Different traders
    have different risk tolerances, trading styles, and goals.

    Methods: Incorporate mechanisms for users to provide feedback on the AI''s performance and suggestions. Use this feedback
    to adjust the AI''s trading strategies, risk management rules, and even user interface.

    Challenges: User feedback can be subjective and may not always align with optimal trading strategies. Balancing user preferences
    with sound financial principles is key.

    Combination and Integration:


    Synergy: The most effective approach is to integrate these methods. Historical data provides a foundational understanding,
    real-time data offers immediacy, and user feedback ensures personalization and adaptability.

    Implementation: Develop a system where these components feed into each other. For example, real-time market reactions
    can be used to refine historical models, while user feedback can help prioritize which real-time data is most relevant.

    Continuous Learning and Adaptation:


    Machine Learning Techniques: Use online learning, reinforcement learning, or adaptive algorithms that can update their
    parameters in response to new data and feedback.

    Monitoring and Maintenance: Regularly monitor the AI''s performance and intervene when necessary to adjust models, especially
    in response to market regime changes or unusual events.

    Ethical and Regulatory Considerations:


    Ensure that the AI''s learning and decision-making processes are transparent, fair, and compliant with financial regulations.
    This includes considerations around data privacy, market manipulation, and ensuring that the AI does not engage in unethical
    trading practices.'
response: EVERYTHING_CLEAR
